version: '3.7'

networks:
  ardy_poc:
    name: ardy_poc

x-app: &x-app
  build: .
  volumes:
    - .:/myapp
  environment:
    ARDY_KAFKA_HOST_URI: 'broker:29092'
  depends_on:
    - broker
  networks:
    - ardy_poc

services:
  # db:
  #   image: postgres
  #   volumes:
  #     - ./tmp/db:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: password
  web:
    <<: *x-app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"

  consumer:
    <<: *x-app
    command: bash -c "ardy_kafka_consumer --dispatcher UserDispatcher"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: ardy_poc_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ardy_poc

  broker:
    image: confluentinc/cp-kafka:7.3.1
    container_name: ardy_poc_broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "29092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ardy_poc